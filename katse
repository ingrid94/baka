from tkinter import *

master = Tk()
master2 = Tk()
window = Tk()


# kuna see on ajutine häkk, siis ei hakanud korralikuks tegema
def close_windows():
    master.destroy()
    master2.destroy()
    window.destroy()

# ühe klikiga kinni panemiseks, lõpuks pole seda vaja, aga praegu on mugav
frame = Frame(window)
frame.pack()
quit = Button(frame)
quit['text'] ="Good-bye."
quit['command'] = close_windows
quit.pack()

# esimene canvas
fst = Canvas(master, height=500, width=500, bg='white')
fst.pack()
master.geometry("500x500+0+100")

# teine canvas
secnd = Canvas(master2, width=500, height=500, bg='white')
secnd.pack()
master2.geometry("500x500+800+100")


def make_block(x,y):
    points = [x, y, x+50, y,
          x+50, y+10, x+80, y+10,
          x+80, y, x+200, y,
          x+200, y+40, x+80, y+40,
          x+80, y+50, x+50, y+50,
          x+50, y+40, x, y+40,
          x, y]
    return points

all_blocks = {}

secnd.create_polygon(make_block(50, 100), fill='blue', tag=('blue', 'first'))
secnd.create_polygon(make_block(50, 200), fill='red', tag='red')

all_blocks[1] = secnd.gettags(1)
all_blocks[2] = secnd.gettags(2)


def callback(event):
    secnd.focus_set()
    resp = event.widget.find_overlapping(event.x, event.y, event.x, event.y)
    if(len(resp) != 0):
        if(resp[0] == 1):
            fst.create_polygon(make_block(0, 0), fill='blue', tag=('blue', 'first'))
        elif(resp[0] == 2):
            fst.create_polygon(make_block(0, 0), fill='red', tag='red')

drag_data = {"x": 0, "y": 0, "item": None}


def onTokenButtonPress(event):
    # id'd on erinevad. Jei!
    # fst.focus_set()
    # resp = fst.find_overlapping(event.x, event.y, event.x, event.y)
    # print(resp)
    active = fst.find_overlapping(event.x, event.y, event.x, event.y)
    if(len(active)!=0):
        peale = active[-1]
        drag_data["item"] = active[-1]
        fst.tag_raise(peale)
        drag_data["x"] = event.x
        drag_data["y"] = event.y


def onTokenButtonRelease(event):
    drag_data["item"] = None
    drag_data["x"] = 0
    drag_data["y"] = 0


def onTokenMotion(event):
    delta_x = event.x - drag_data["x"]
    delta_y = event.y - drag_data["y"]
    if(drag_data["item"]!= None):
        fst.move(drag_data["item"], delta_x, delta_y)
        drag_data["x"] = event.x
        drag_data["y"] = event.y


secnd.bind("<Button-1>", callback)
fst.bind("<ButtonPress-1>", onTokenButtonPress)
fst.bind("<ButtonRelease-1>", onTokenButtonRelease)
fst.bind("<B1-Motion>", onTokenMotion)
mainloop()
