from tkinter import *


class Block:
    def __init__(self, coords):
        self.coords = coords


class IfBlock(Block):
    # ülemine ühendus, alumine ühendus, tingimus
    connected = [None, None, None]


class AssignBlock(Block):
    # ülemine, alumine
    connected = [None, None]
    # muutuja väärtus
    value = None

    def __init__(self, name, coords):
        super().__init__(coords)
        self.name = name


class BlockCanvas:
    def __init__(self, root):
        self.top = Toplevel(root)
        self.canvas = Canvas(self.top, width=500, height=500, bg="white")
        self.canvas.pack()

    def getFocusSet(self):
        return self.canvas.focus_set()

    @staticmethod
    def make_simpleBlock(x, y):
        points = [x, y, x+20, y,
            x+20, y+10, x+50, y+10,
            x+50, y, x+180, y,
            x+180, y+35, x+50, y+35,
            x+50, y+45, x+20, y+45,
            x+20, y+35, x, y+35,
            x, y]
        return points

    @staticmethod
    def make_cBlock(x, y):
        points = [x, y, x+180, y,
                  x+180, y+30, x+70, y+30,
                  x+70, y+40, x+40, y+40,
                  x+40, y+30, x+20, y+30,
                  x+20, y+70, x+40, y+70,
                  x+40, y+80, x+70, y+80,
                  x+70, y+70, x+120, y+70,
                  x+120, y+90, x, y+90,
                  x, y]
        return points

    def blocks(self):
        # blocks = []
        # all_blocks = {}  # oli mõeldud tagide jaoks, vb pole vaja
        self.canvas.create_polygon(self.make_simpleBlock(50, 100), fill='blue')
        self.canvas.create_polygon(self.make_simpleBlock(50, 200), fill='red')
        self.canvas.create_polygon(self.make_cBlock(50, 300), fill='green')

    def bind(self, function):
        self.canvas.bind("<ButtonPress-1>", function)


class MoveBlockCanvas(BlockCanvas):

    def __init__(self, root):
        super().__init__(root)
        self.drag_data = {"x": 0, "y": 0, "item": None}
        self.binding()

    def create_polygon(self, args, **kw):
        self.canvas.create_polygon(args, kw)

    def onTokenButtonPress(self, event):
        # id'd on erinevad. Jei!
        # fst.focus_set()
        # resp = fst.find_overlapping(event.x, event.y, event.x, event.y)
        # print(resp)
        active = self.canvas.find_overlapping(event.x, event.y, event.x, event.y)
        if len(active) != 0:
            peale = active[-1]
            self.drag_data["item"] = active[-1]
            self.canvas.tag_raise(peale)
            self.drag_data["x"] = event.x
            self.drag_data["y"] = event.y

    def onTokenButtonRelease(self, event):
        self.drag_data["item"] = None
        self.drag_data["x"] = 0
        self.drag_data["y"] = 0

    def onTokenMotion(self, event):
        delta_x = event.x - self.drag_data["x"]
        delta_y = event.y - self.drag_data["y"]
        if self.drag_data["item"] is not None:
            self.canvas.move(self.drag_data["item"], delta_x, delta_y)
            self.drag_data["x"] = event.x
            self.drag_data["y"] = event.y

    def binding(self):
        self.canvas.bind("<ButtonPress-1>", self.onTokenButtonPress)
        self.canvas.bind("<ButtonRelease-1>", self.onTokenButtonRelease)
        self.canvas.bind("<B1-Motion>", self.onTokenMotion)


class Controller:

    def __init__(self, t1, t2):
        self.stableCanvas = t1
        self.moveCanvas = t2
        self.stableCanvas.bind(self.create_blocks)

    def create_blocks(self, event):
        self.stableCanvas.getFocusSet()
        resp = event.widget.find_overlapping(event.x, event.y, event.x, event.y)
        if len(resp) != 0:
            if resp[0] == 1:
                self.moveCanvas.create_polygon(self.moveCanvas.make_simpleBlock(0, 0), fill='blue', tag=('blue', 'first'))
            elif resp[0] == 2:
                self.moveCanvas.create_polygon(self.stableCanvas.make_simpleBlock(0, 0), fill='red', tag='red')
            elif resp[0] == 3:
                self.moveCanvas.create_polygon(self.stableCanvas.make_cBlock(0, 0), fill='green')


def main():
    root = Tk()
    root.geometry("+1+1")
    Button(command=root.quit, text="Quit").pack()
    t1 = BlockCanvas(root)
    t1.top.geometry("+10+100")
    BlockCanvas.blocks(t1)
    t2 = MoveBlockCanvas(root)
    t2.top.geometry("+520+100")
    Controller(t1, t2)
    root.mainloop()

main()
